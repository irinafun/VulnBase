from spider.thirdpart.exploitdb import ExploitDB
from spider.cve_spider import CVEDetailSpider, CVEDetailItem, CVESimpleItem, CVEComponentItem
from spider.utils.logger import Logger

class ExploitDBSpider(CVEDetailSpider):
    def __init__(self):
        self.__priority__ = 10

    def get_detail(self, cve: CVESimpleItem) -> CVEDetailItem:
        db = ExploitDB.get_exploit(cve.cve_id)
        if db is None:
            return None
        try:
            exp = ExploitDB.get_exploit_file(db['file'])
        except Exception as e:
            Logger.warning('get exploit file failed: %s' % e)
            return None
        
        detail = CVEDetailItem(cve.cve_id, cve_url=cve.cve_url, cve_description=cve.cve_description, cve_timestamp=cve.cve_timestamp, poc='', exp=exp)
        detail.refs = cve.refs
        detail.components.append(CVEComponentItem(db['platform'], ''))

        return detail